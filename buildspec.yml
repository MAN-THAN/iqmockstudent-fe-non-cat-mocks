version: 0.2
env:
  variables:
    docker_registry: 059407755516.dkr.ecr.ap-south-1.amazonaws.com
    image_tag: iqmockstudent-fe-sec-dev
    AWS_ACCESS_KEY_ID: AKIAQ3VH2ND6GMDXCZ74
    AWS_DEFAULT_REGION: ap-south-1
    AWS_SECRET_ACCESS_KEY: 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
    namespace: iqmock-dev
    deployment: iqstudent-fe-sec-dev
phases:
  install:
    run-as: root
    on-failure: ABORT
    commands:
      - echo Entered the install phase...
      - yum update
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    finally:
      - docker --version
      - kubectl version --client
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID 
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY 
      - aws configure set region $AWS_DEFAULT_REGION
      - aws configure get region
      - echo This always runs even if the update or install command fails 
  pre_build:
    run-as: root
    on-failure: ABORT
    commands:
      - echo Entered the pre_build phase...
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 059407755516.dkr.ecr.ap-south-1.amazonaws.com
      - aws eks update-kubeconfig --region ap-south-1 --name iquanta-eks-01
      - kubectl get nodes
    finally:
      - echo This always runs even if the login command fails
  build:
    run-as: root
    on-failure: ABORT
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - docker build -t $docker_registry/$image_tag .
      - docker images
      - docker push $docker_registry/$image_tag
    finally:
      - echo Build successfully completed
  post_build:
    run-as: root
    on-failure: ABORT
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
      - kubectl rollout restart -n $namespace deployment $deployment
    finally:
      - echo Kubectl deployment successfully completed...
      - kubectl get deployments -n $namespace
